<%- include("../../views/partials/admin/header") %>
<head>
   <style>
       .thumbnails-container {
           display: flex;
           overflow-x: auto;
       }


       .thumbnail {
           margin-right: 10px;
       }
       .input-upload {
   position: relative;
}


.error-message {
           color: red;
           display: none;
       }


   </style>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
<%- include("../../views/partials/admin/header") %>
<head>
    <style>
        .thumbnails-container {
            display: flex;
            overflow-x: auto;
        }

        .thumbnail {
            margin-right: 10px;
        }

        .input-upload {
            position: relative;
        }

        .error-message {
            color: red;
            display: none;
        }
    </style>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
<section class="content-main" style="margin-left: 30%;">
    <div class="row">
        <div class="col-9">
            <div class="content-header">
                <h2 class="content-title">Edit Product</h2>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-body">
                    <form method="post" action="/admin/editProduct/<%= product._id %>" enctype="multipart/form-data" onsubmit="return validateForm()">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" placeholder="Type here" name="productName" value="<%= product.productName %>" class="form-control border" id="product_name">
                            <div id="productName-error" class="error-message"></div>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Full description</label>
                            <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border" rows="4"><%= product.description %></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>

                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Regular price</label>
                                    <input placeholder="$" name="regularPrice" type="text" value="<%= product.regularPrice %>" class="form-control border">
                                    <div id="regularPrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Sale price</label>
                                    <input placeholder="$" name="salePrice" type="text" value="<%= product.salePrice %>" class="form-control border">
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12 mb-3">
                            <label class="form-label">Size and Quantity</label>
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>Size</th>
                                        <th>Quantity</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>S</td>
                                        <td>
                                            <input placeholder="" name="quantity_s" type="text" value="<%= product.sizeQuantities.S %>" class="form-control border">
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>M</td>
                                        <td>
                                            <input placeholder="" name="quantity_m" type="text" value="<%= product.sizeQuantities.M %>" class="form-control border">
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>L</td>
                                        <td>
                                            <input placeholder="" name="quantity_l" type="text" value="<%= product.sizeQuantities.L %>" class="form-control border">
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>XL</td>
                                        <td>
                                            <input placeholder="" name="quantity_xl" type="text" value="<%= product.sizeQuantities.XL %>" class="form-control border">
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>XXL</td>
                                        <td>
                                            <input placeholder="" name="quantity_xxl" type="text" value="<%= product.sizeQuantities.XXL %>" class="form-control border">
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <div id="size-error" class="error-message"></div>
                            <div id="quantity-error" class="error-message"></div>
                        </div>

                        <div class="card mb-4">
                            <div class="card-body">
                                <div class="row gx-2">
                                    <div class="col-sm-6 mb-3">
                                        <label class="form-label">Category</label>
                                        <select class="form-select border" name="category">
                                            <% for (let i = 0; i < cat.length; i++) { %>
                                            <option value="<%= cat[i].name %>" <%= product.category === cat[i].name ? 'selected' : '' %>><%= cat[i].name %></option>
                                            <% } %>
                                        </select>
                                        <div id="category-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="card mb-2">
                            <div class="card-header">
                                <h4>Select and Crop Images</h4>
                            </div>
                            <div class="card-body">
                                <div id="imageInputsContainer">
                                    <!-- Image Input Section -->
                                    <div class="mb-3">
                                        <label for="input1" class="form-label">Image 1</label>
                                        <input class="form-control" type="file" id="input1" name="images" accept="image/png, image/jpeg, image/jpg" onchange="handleImageSelection(event, 1)">
                                        <div class="image-preview mt-2" id="imagePreview1">
                                            <img id="imgView1" src="<%= product.images[0] %>" alt="Preview" class="img-thumbnail" style="display: block; width: 100px;">
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="input2" class="form-label">Image 2</label>
                                        <input class="form-control" type="file" id="input2" name="images" accept="image/png, image/jpeg, image/jpg" onchange="handleImageSelection(event, 2)">
                                        <div class="image-preview mt-2" id="imagePreview2">
                                            <img id="imgView2" src="<%= product.images[1] %>" alt="Preview" class="img-thumbnail" style="display: block; width: 100px;">
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="input3" class="form-label">Image 3</label>
                                        <input class="form-control" type="file" id="input3" name="images" accept="image/png, image/jpeg, image/jpg" onchange="handleImageSelection(event, 3)">
                                        <div class="image-preview mt-2" id="imagePreview3">
                                            <img id="imgView3" src="<%= product.images[2] %>" alt="Preview" class="img-thumbnail" style="display: block; width: 100px;">
                                        </div>
                                    </div>
                                </div>
                                <!-- Cropped Image Section -->
                                <div id="cropperSection" style="display: none;">
                                    <h5>Crop Image</h5>
                                    <div class="d-flex flex-column align-items-center">
                                        <img id="cropImage" src="" alt="Crop Preview" style="width: 300px; height: auto;">
                                        <button type="button" class="btn btn-primary mt-3" id="cropSaveButton">Save Cropped Image</button>
                                    </div>
                                </div>
                                <!-- Selected Images Preview -->
                                <div class="mt-4">
                                    <h5>Selected Images</h5>
                                    <div id="addedImagesContainer" class="d-flex flex-wrap gap-3">
                                        <img src="<%= product.images[0] %>" alt="Selected Image" class="img-thumbnail" style="width: 100px;">
                                        <img src="<%= product.images[1] %>" alt="Selected Image" class="img-thumbnail" style="width: 100px;">
                                        <img src="<%= product.images[2] %>" alt="Selected Image" class="img-thumbnail" style="width: 100px;">
                                    </div>
                                </div>
                                <div id="images-error" class="text-danger mt-2"></div>
                            </div>
                        </div>

                        <div>
                            <button class="btn btn-md rounded font-sm hover-up" type="submit">Update Product</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

   <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<%- include("../../views/partials/admin/footer") %>

<script>


    function validateAndSubmit() {
    if (validateForm()) {
       document.forms[0].submit();
    }
    }
    
    
    
    
    function validateForm() {
       let imageDatas = false
               console.log("validate form");
               clearErrorMessages();
               const name = document.getElementsByName('productName')[0].value;
               const description = document.getElementsByName('descriptionData')[0].value;
               const size = document.querySelector('select[name="size"]').value;
               const price = document.getElementsByName('regularPrice')[0].value;
               const saleprice = document.getElementsByName('salePrice')[0].value;
               
               const category = document.getElementsByName('category')[0].value;
               const images = document.getElementById('input1')
               const quantity=document.getElementsByName('quantity')
                 imageDatas = document.getElementById("imageDatas")?.value;
               let isValid = true;    
               if (name.trim() === "") {
       displayErrorMessage('productName-error', 'Please enter a product name.');
       isValid = false;
    }
              
               if (description=== '') {
                   displayErrorMessage('description-error', 'Please enter a product description.');
                   isValid = false;
               } 
    
    
               if ( parseInt(quantity) < 0) {
                   displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                   isValid = false;
               }
    
    
    
    
               if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                   displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                   isValid = false;
               }
              if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
                   displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
                   isValid = false;
               }
              
               if (!imageDatas && images.files.length === 0) {
                   displayErrorMessage("images-error",'Please select an image.');
                   isValid = false;
               }
               if (!size) {
                   displayErrorMessage('size-error', 'Please select a size.');
                    isValid = false;
}

               return isValid;
           }
          
           function displayErrorMessage(elementId, message) {
               var errorElement = document.getElementById(elementId);
               errorElement.innerText = message;
               errorElement.style.display = "block";
           }
    
    
           function clearErrorMessages() {
    const errorElements = document.querySelectorAll('.error-message');
    errorElements.forEach(element => {
        element.innerText = '';
        element.style.display = 'none';
    });
}

    
    
    
    
    function viewImage1(event) {
               document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           function viewImage2(event) {
               document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           function viewImage3(event) {
               document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
           }   
    

    
    
           let cropper;
        
        // Function to preview and crop image for each input
        function viewImage(event, index) {
            let input = event.target;
            let reader = new FileReader();
            reader.onload = function () {
                let dataURL = reader.result;
                let image = document.getElementById('imgView' + index);
                image.src = dataURL;

                // Initialize Cropper for each image
                cropper = new Cropper(image, {
                    aspectRatio: 1,
                    viewMode: 1,
                    guides: true,
                    background: false,
                    autoCropArea: 1,
                    zoomable: true
                });

                // Save cropped image logic
                let saveButton = document.getElementById('saveButton' + index);
                saveButton.addEventListener('click', function () {
                    let croppedCanvas = cropper.getCroppedCanvas();
                    let croppedImage = document.createElement("img");
                    croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);

                    // Update the preview image with the cropped image
                    document.getElementById("imgView" + index).src = croppedImage.src;

                    // Convert the cropped image to a file
                    croppedCanvas.toBlob(blob => {
                        let inputFile = document.getElementById('input' + index);
                        let imgFile = new File([blob], `cropped-image-${index}.png`, { type: "image/png" });
                        const dataTransfer = new DataTransfer();
                        dataTransfer.items.add(imgFile);
                        inputFile.files = dataTransfer.files;
                    });
                });
            };
            reader.readAsDataURL(input.files[0]);
        }
  
    
    
           const selectedImages = [];
       document.getElementById("imageInput").addEventListener("change", handleFileSelect);
    
    
           function handleFileSelect(event) {
               const addedImagesContainer = document.getElementById("addedImagesContainer");
               addedImagesContainer.innerHTML = "";
               const files = event.target.files;
               for (let i = 0; i < files.length; i++) {
                   const file = files[i];
                   selectedImages.push(file);
                   const thumbnail = document.createElement("div");
                   thumbnail.classList.add("thumbnail");
                   const img = document.createElement("img");
                   img.src = URL.createObjectURL(file);
                   img.alt = "thumbnail";
                   img.style.width = "50px";
                   img.style.height = "auto";
                   const removeIcon = document.createElement("span");
                   removeIcon.classList.add("remove-icon");
                   removeIcon.innerHTML = "&times;";
                   removeIcon.addEventListener("click", function () {
                       const index = selectedImages.indexOf(file);
                       if (index !== -1) {
                           selectedImages.splice(index, 1);
                       }
                       thumbnail.remove();
                   });
                   thumbnail.appendChild(img);
                   thumbnail.appendChild(removeIcon);
                   addedImagesContainer.appendChild(thumbnail);
               }
           };
           
          function deleteSingleImage(imageId,productId) {
            $.ajax({
                url:"/admin/deleteSingleImage",
                method:'post',
                data:{imageNameToServer:imageId,productToServer:productId},
                success:((responce)=>{
                                if(response.status===true){
                                    window.location.reload()
                                }
                })
            })
          }





       </script>
    

